- name: Install Python build dependencies (including readline, lzma)
  become: true
  apt:
    name:
      - build-essential
      - libssl-dev
      - zlib1g-dev
      - libncurses5-dev
      - libffi-dev
      - libsqlite3-dev
      - libreadline-dev
      - liblzma-dev
      - libbz2-dev
      - wget
      - curl
      - llvm
      - tk-dev
    state: present
    update_cache: yes

- name: Install pyenv (if not already installed)
  become: false
  shell: |
    if [ ! -d "$HOME/.pyenv" ]; then
      curl https://pyenv.run | bash
    fi
  args:
    executable: /bin/bash

- name: Ensure pyenv init lines exist in .bashrc
  become: false
  blockinfile:
    path: ~/.bashrc
    block: |
      export PATH="$HOME/.pyenv/bin:$PATH"
      eval "$(pyenv init -)"
      eval "$(pyenv virtualenv-init -)"
    marker: "# {mark} ANSIBLE MANAGED PYENV INIT"

- name: Install Python {{ python_versions[python_selected] }} via pyenv
  become: false
  shell: |
    export PATH="$HOME/.pyenv/bin:$PATH"
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
    pyenv install -s {{ python_versions[python_selected] }}
    pyenv global {{ python_versions[python_selected] }}
  args:
    executable: /bin/bash

- name: Apply pyenv to current shell for future tasks (force export)
  become: false
  shell: |
    export PATH="$HOME/.pyenv/bin:$PATH"
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
    echo "Applied pyenv environment in shell"
  args:
    executable: /bin/bash

- name: Make python3.11 globally accessible
  become: true
  file:
    src: "/home/ubuntu/.pyenv/versions/{{ python_versions[python_selected] }}/bin/python3.11"
    dest: "/usr/local/bin/python3.11"
    state: link
    force: yes
